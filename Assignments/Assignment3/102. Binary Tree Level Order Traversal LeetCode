/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        // Your code here
        List<List<Integer>> res= new ArrayList<>();
        if(root == null){
            return res;
        }
        Queue<TreeNode> q = new LinkedList<>();
        
        
        q.add(root);
        
        
        while(!q.isEmpty()){
            List<Integer> ans = new ArrayList<>();
            int anssize = q.size();
            for(int i = 0 ; i < anssize ; i++){
                TreeNode temp = q.remove();
            ans.add(temp.val);
            // q.get(temp.key);
            if(temp.left != null){
                // res.add(temp.left.val);
                q.add(temp.left);
            }
            if(temp.right != null){
                // res.add(temp.right.val);
                q.add(temp.right);
            }

            }
            res.add(ans);
        }
        return res;
    }
}
