/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        if(root == null){
            return new ArrayList<>();
        }
        List<List<Integer>> res = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        boolean a = false;
        while(!q.isEmpty()){
            List<Integer> ans = new ArrayList<>();
            int levelsize = q.size();
            for(int i = 0 ;i< levelsize ; i++){
                TreeNode temp = q.poll();
                ans.add(temp.val);
                if(temp.left != null){
                    q.add(temp.left);
                }
                if(temp.right != null){
                    q.add(temp.right);
                }
            }

            if(a){
                Collections.reverse(ans);
                res.add(ans);
            }
            else{
                res.add(ans);
            }

            a = !a;
        }

        return res;

    }
}



